stages:
- html
- deployhtml
- pdf
- deploypdf

generate:
 image: $PELICANIMAGE
 stage: html
 artifacts:
  paths:
    - /builds/$COMPILATIONPATH/output
 script:
  - cd /builds/$COMPILATIONPATH
  - pelican content -o output -s pelicanconf.py
 tags:
  - docker

deployblog:
 image: $AWSCLIIMAGE
 stage: deployhtml
 artifacts:
  when: always
  expire_in: 20 minutes
  paths:
   - /builds/$COMPILATIONPATH/output
 script:
  - aws s3 cp --content-type 'text/html' /builds/$COMPILATIONPATH/output/ s3://${BUCKET_NAME}/ --recursive
 environment:
  name: ${CI_COMMIT_REF_SLUG}
  url: https://${BUCKET_NAME}.s3-website.${AWS_DEFAULT_REGION}.amazonaws.com/
 tags:
  - docker
 allow_failure: true

pdfgen:
 image: $PDFGENIMAGE
 stage: pdf
 script:
    - /usr/local/bin/entrypoint --url https://maxime.sourdin.ovh/cv --pdf /builds/$COMPILATIONPATH/output/cv.pdf --scale 0.7 && exit 0
 artifacts:
  when: always
  expire_in: 20 minutes
  paths:
   - /builds/$COMPILATIONPATH/output
 tags:
  - docker
 allow_failure: true

pdfs3:
 image: $AWSCLIIMAGE
 stage: deploypdf
 tags:
  - docker
 allow_failure: true
 artifacts:
  when: always
  expire_in: 20 minutes
  paths:
   - /builds/$COMPILATIONPATH/output
 script:
  - aws s3 cp /builds/$COMPILATIONPATH/output/cv.pdf s3://${BUCKET_NAME}/
 environment:
  name: ${CI_COMMIT_REF_SLUG}
  url: https://${BUCKET_NAME}.s3-website.${AWS_DEFAULT_REGION}.amazonaws.com/
